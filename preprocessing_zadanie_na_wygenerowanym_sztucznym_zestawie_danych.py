# -*- coding: utf-8 -*-
"""Preprocessing_zadanie_na_wygenerowanym_sztucznym_zestawie_danych.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlpIhkOi_gUEbjQZSKrLlj_gF6JQu4ct

Należy wygenerować sztuczny zestaw danych o takiej samej wielkości, jak zestaw bazowy. Jednocześnie należy kierować się następującymi założeniami:

w pierwszym wierszu dla danych znajdują się elementy losowe z
zakresu ⟨mini, maxi⟩, gdzie mini jest wartością minimalną i-tego atrybutu, a wartość maxi jest wartością maksymalną i-tego atrybutu; 

losowe wartości w poszczególnych kolumnach nie mogą wyjść poza wskazany zakres ⟨mini, maxi⟩, dla i = 1, 2, ..., k gdzie k jest liczbą atrybutów z wyłączeniem atrybutu decyzyjnego;

zmiana wartości dla poszczególnych atrybutów w kolejnych wierszach
musi być w zakresie ⟨prevv al − prevv al· 1%; prevv al + prevv al· 1%⟩;

w przypadku, gdy wynikiem będzie wartość poza zakresem max (lub
min) należy jako nową wartość przyjąć właśnie dany zakres;

po wygenerowaniu tablicy należy policzyć korelację pomiędzy każdą
z kolumn z pierwszego zestawu oraz odpowiadającym kolumnom z
drugiego zestawu (tj. korelacja pomiędzy pierwszymi kolumnami,
korelacja pomiędzy drugimi kolumnami i tak dalej).
"""

#Należy wygenerować sztuczny zestaw danych o takiej samej wielkości, jak zestaw bazowy. Jednocześnie należy kierować się następującymi założeniami:
#w pierwszym wierszu dla danych znajdują się elementy losowe z zakresu ⟨mini, maxi⟩, gdzie mini jest wartością minimalną i-tego atrybutu, 
#a wartość maxi jest wartością maksymalną i-tego atrybutu.

import random
import pandas


#wczytanie pliku
dane = pandas.read_csv("/content/EURUSD_H4.csv")
nowe_dane = dane.head(2500)  

#sprawdzenie i wyświetlenie jakie są wartości maksymalne i minimalne
max = nowe_dane.max()             
print("wartości maksymalne:")
print(max)
min = nowe_dane.min()            
print("wartości minimalne:")
print(min)


dl = nowe_dane.columns.tolist()                         #utworzyłam listę nagłówków dataframu
l_Decision = nowe_dane['Decision'].unique().tolist()    #utworzyłam listę decyzji z kolumny Decision

#Tworzę słownik, z którego później utworzę DataFrame. Nagłówki to klucze.
slownik = {}
for kol in range(0,len(dl)-1):
    nazwy_nagl_nowej_tab = dl[kol] + "_" + str(2)       #w sztucznym DataFramie nagłówki będą miały te same nazwy co w oryginalnym, ale z dopiskiem _2
    wartosc = [random.uniform(nowe_dane[dl[kol]].min(),nowe_dane[dl[kol]].max())]   #pierwszym elementem jest wylosowana wartość z przedziału min i max w poszczególnych kolumnach, uniform zwraca losową liczbę float pomiędzy dwoma podanymi parametrami
    
#losowe wartości w poszczególnych kolumnach nie mogą wyjść poza wskazany zakres ⟨mini, maxi⟩, dlai = 1, 2, ..., k gdzie k jest liczbą atrybutów z wyłączeniem atrybutu decyzyjnego;
#zmiana wartości dla poszczególnych atrybutów w kolejnych wierszach musi być w zakresie ⟨prevv al − prevv al· 1%; prevv al + prevv al· 1%⟩;
#w przypadku, gdy wynikiem będzie wartość poza zakresem max (lub min) należy jako nową wartość przyjąć właśnie dany zakres
    for i in range(1,2500):
        prev = i-1
        w = random.uniform(wartosc[prev]+wartosc[prev]*0.01,wartosc[prev]+wartosc[prev]*0.01)
        if w < nowe_dane[dl[kol]].max() and w > nowe_dane[dl[kol]].min():
            wartosc.append(random.uniform(wartosc[prev]+wartosc[prev]*0.01,wartosc[prev]+wartosc[prev]*0.01))
        else:
            wartosc.append(random.uniform(nowe_dane[dl[kol]].min(),nowe_dane[dl[kol]].max()))

    slownik[nazwy_nagl_nowej_tab] = wartosc #przypisuję listy z wartościami do poszczególnych kluczy

#Do słownika dodaję jeszcze kolumnę Decision. Na potrzeby tego DataFramu decyzje będą wprowadzone losowo. Dodaję tę kolumnę tylko dlatego, że należy wygenerować sztuczny zestaw danych o takiej samej wielkości, jak zestaw bazowy.
dla_kol_Decision2 = [random.choice(l_Decision)]
for i in range (1,2500):
    slownik['Decision2'] = dla_kol_Decision2
    dla_kol_Decision2.append(random.choice(l_Decision))

sztucznydata = pandas.DataFrame(slownik)    #Tworzę sztuczną tabelę DataFrame ze słownika


#po wygenerowaniu tablicy należy policzyć korelację pomiędzy każdą z kolumn z pierwszego zestawu oraz odpowiadającym kolumnom z drugiego zestawu 
#(tj. korelacja pomiędzy pierwszymi kolumnami,korelacja pomiędzy drugimi kolumnami i tak dalej).
dl2 = sztucznydata.columns.tolist() #lista z nagłówkami ze sztucznie wygenerowanej tabeli
for kol in range(0,len(dl)-1):                  #-1 bo nie liczę korelacji dla kolumny z decyzjami
    nazwa_korelacji = "korelacja2" + dl[kol]
    nazwa_korelacji = nowe_dane[dl[kol]].corr(sztucznydata[dl2[kol]])   #liczenie korelacji
    print(f"korelacja2 między {dl[kol]} z pierwotnego zestawu a {dl2[kol]} ze sztucznego zestawu: {nazwa_korelacji}") #wyświetlanie korelacji